# Alpha Diversity {#sec-alpha-diversity}

```{r setup, echo=FALSE, results="asis"}
library(rebook)
chapterPreamble()
```

## Background

Alpha diversity, or within-sample diversity, is a central concept in microbiome 
research. In ecological literature, several distinct but related alpha diversity
indices, often referring to **richness** and **evenness** - the number of taxa 
and how they are distributed, respectively - are commonly used 
[@Willis2019;@Whittaker1960]. The term **diversity** can be used to collectively 
refer to all these indices.

### Applications

Alpha diversity is predominantly used to quantify complexity in the microbiome. 
In the general adult population, lower alpha diversity and lower bacterial load 
have been associated to worse overall physical and mental health 
[@Valles-Colomer2019GBMs;@vandeputte2017quantitative]. However, this principle 
may not generalize to other populations, most notably in early life
and in patient cohorts [@Ma2019].

### Approaches

The majority of alpha diversity metrics are closely related, though this is not 
evident from their names. Bastiaanssen et al. [-@bastiaanssen2023bugs1] lay out
this relationship across two factors (See table below); First, alpha diversity 
metrics can be defined as special cases of a unifying equation of **diversity**, 
where the **Hill number** determines the specific index captured. Lower Hill 
numbers favour **richness**, the number of distinct taxa, whereas higher numbers 
favour **evenness**, how the taxa are distributed over the sample [@Hill1973]. 
Second, some alpha diversity metrics are weighed based on phylogeny, like 
Faith's PD [-@Faith1992] and PhILR [@Silverman2017]. 

```{r, echo=FALSE}
library(gt)

#Descriptions
neutral_div <- 
  "**Neutral Diversity**  

---  
*Weighs each taxon equally, no assumptions about phylogeny*"
phyl_div    <- 
  "**Phylogenetic Diversity**  

---  
*Indices are scaled based on taxonomic closeness with a phylogenetic tree*"

hill_0 <- 'Dependent on presence and absence of taxa, not abundance'
hill_1 <- 'Dependent on how evenly taxa are distributed in a sample'
hill_2 <- 'The probability of two randomly picked taxa not being the same'

table_colnames <- c("phyl_desc", hill_0, hill_1, hill_2)

footnote_md <- md(
"The equation for general diversity can be defined as follows: 
   \\${{}^qD = (\\sum_{i=1}^{R}p^q_i})^{\\frac{1}{(1-q)}}\\$,   
   with *q* = Hill number, *R* = number of features, 
   *p* = relative feature abundance.")

#Generate data.frame for table
cbind.data.frame(
  c(neutral_div,  phyl_div),
  c("Richness (Chao1)", "Faith's Phylogenetic Diversity"),
  c("Shannon Entropy","Phylogenetic Entropy"),
  c("Simpson's Index", "Rao's Quadratic Diversity")) |>  
  `colnames<-`(value = table_colnames) |> 
  
  #Pipe into gt
  gt(rowname_col = "phyl_desc") |> 
  fmt_markdown() |>
  
  tab_spanner(label = md("**Hill number 0**"), columns = 2) |> 
  tab_spanner(label = md("**Hill number 1**"), columns = 3) |> 
  tab_spanner(label = md("**Hill number 2**"), columns = 4) |> 
  
  #Formatting
  cols_align(align = "center") |> 
  opt_table_lines() |> 
  tab_style(style     = list(cell_text(v_align = "middle", align = "center")),
            locations = cells_column_spanners()) |> 
  tab_style(style     = cell_text(style = "italic"), 
            locations = cells_column_labels()) |> 
  tab_style(style     = list(cell_text(weight = "bolder")),
            locations = cells_body(2:4)) |> 
  cols_width(1   ~ pct(32.5), 2:4 ~ pct(22.5)) |>
  tab_footnote(footnote = footnote_md, placement = "left") 
```

::: {.callout-note}
## Note: Richness estimators and denoising

Several estimators have been developed to address the confounding effect of 
limited sampling size on observed richness, most notably ACE [@Chao1992] and 
Chao1 [@Chao1984]. Notably, these approaches may yield misleading results for 
modern 16S data, which commonly features denoising and removal of singletons 
[@Deng2024]. 
:::

## Examples

### Calculate alpha diversity measures {#sec-estimate-diversity}

Alpha diversity can be estimated with the `addAlpha()` function, which interacts
with other packages implementing the calculation, such as `vegan` [@R_vegan] and
_`picante`_ [@R_picante; @Kembel2010]. 
These functions calculate the given indices, and add them to the `colData` slot 
of the `SummarizedExperiment` object with the given `name`. 

```{r plot-richness, message=FALSE, cache=TRUE}
#| context: setup

# First, let's load some example data.
library(mia)
data("GlobalPatterns", package="mia")
tse <- GlobalPatterns

# Compute one or multiple indices simultaneously through the index 'parameter'. 
tse <- addAlpha(
    tse, assay.type = "counts", index = c("observed", "shannon", "faith"),
    detection = 10)

# Check some of the first values in colData
tse$observed |> head()
tse$shannon  |> head()
```
Certain indices have additional options, here observed has `detection` parameter
that control the detection threshold. Species over this threshold is considered
as detected. See full list of options from from `help(addAlpha)`.

::: {.callout-note}
## Note: Phylogenetic distances require a tree

Because `tse` is a `TreeSummarizedExperiment` object, its phylogenetic tree is
used by default. However, the optional argument `tree` must be provided if `tse` 
does not contain a rowTree.
:::

### Visualize alpha diversity measures {#sec-plot-diversity}

As alpha diversity metrics typically summarize high-dimensional samples into 
singular values, many visualization approaches are available. Once calculated, 
these metrics can be analyzed directly from the `colData`, for example, by 
plotting them using `plotColData()` from the `scater` package [@R_scater]. Here,
we use the `observed` species as a measure of richness. Let's visualize the 
results against selected `colData` variables (sample type and final barcode).

```{r plot-div-obs, message=FALSE, fig.cap="Shannon diversity estimates plotted grouped by sample type with colour-labeled barcode.", cache=TRUE}
library(scater)
plotColData(
    tse,
    "observed",
    "SampleType",
    colour_by = "Final_Barcode") +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    labs(x = "Sample types", y = expression(Richness[Observed]))
```

#### Alpha diversity measure comparisons {#sec-compare-alpha}

We can compare alpha diversities for example by calculating correlation between
them. Below, a visual comparison between shannon and faith indices is shown
with a scatter plot.

```{r compare-diversities, fig.width = 6.5}
tse <- addAlpha(tse, assay.type = "counts", index = "shannon")

plotColData(tse, x = "shannon", y = "faith") +
    labs(x="Shannon index", y="Faith (phylogenetic) index") +
    geom_smooth(method = "lm")
```

```{r}
#| label: compare_indices

cor.test(tse[["shannon"]], tse[["faith"]])
```

Let us visualize results from multiple alpha diversity measures
against a given sample grouping available in `colData` (here,
sample type). These have been readily stored in the `colData` slot,
and they are thus directly available for plotting.

```{r plot-all-diversities, fig.width = 6.5}
library(patchwork)

# Create the plots
plots <- lapply(
    c("observed", "shannon", "faith"),
    plotColData,
    object = tse,
    x = "SampleType",
    colour_by = "SampleType")

# Fine-tune visual appearance
plots <- lapply(
    plots, "+",
    theme(axis.text.x = element_blank(),
          axis.title.x = element_blank(),
          axis.ticks.x = element_blank()))

# Plot the figures
wrap_plots(plots, ncol = 1) +
  plot_layout(guides = "collect")
```

### Statistical analysis of alpha diversity measures {#sec-stats-diversity}

We can then analyze the statistical significance. We use the non-parametric
Wilcoxon or Mann-Whitney test, as it is more flexible than the commonly used
Student's t-Test, since it does not assume normality.

```{r}
#| label: test_alpha1

pairwise.wilcox.test(
    tse[["observed"]], tse[["SampleType"]], p.adjust.method = "fdr")
```

#### Visualizing significance in group-wise comparisons

Next, let's compare the Shannon index between sample groups and visualize the
statistical significance. Using the `stat_compare_means` function from the
`ggpubr` package, we can add visually appealing p-values to our plots.

To add adjusted p-values, we have to first calculate them.

```{r visualize-shannon}
library(ggpubr)
library(tidyverse)


index <- "shannon"
group_var <- "SampleType"

# Subsets the data. Takes only those samples that are from feces, skin, or
# tongue.
tse_sub <- tse[ , tse[[group_var]] %in% c("Feces", "Skin", "Tongue") ]

# Changes old levels with new levels
tse_sub$SampleType <- factor(tse_sub$SampleType)

# Calculate p values
pvals <- pairwise.wilcox.test(
    tse_sub[[index]], tse_sub[[group_var]], p.adjust.method = "fdr")
# Put them to data.frame format
pvals <- pvals[["p.value"]] |>
    as.data.frame()
varname <- "group1"
pvals[[varname]] <- rownames(pvals)
# To long format
pvals <- reshape(
    pvals,
    direction = "long",
    varying = colnames(pvals)[ !colnames(pvals) %in% varname ],
    times = colnames(pvals)[ !colnames(pvals) %in% varname ],
    v.names = "p",
    timevar = "group2",
    idvar = "group1"
    ) |>
    na.omit()
# Add y-axis position
pvals[["y.position"]] <- apply(pvals, 1, function(x){
    temp1 <- tse[[index]][ tse[[group_var]] == x[["group1"]] ]
    temp2 <- tse[[index]][ tse[[group_var]] == x[["group2"]] ]
    temp <- max( c(temp1, temp2) )
    return(temp)
})
pvals[["y.position"]] <- max(pvals[["y.position"]]) +
    order(pvals[["y.position"]]) * 0.2
# Round values
pvals[["p"]] <- round(pvals[["p"]], 3)

# Create a boxplot
p <- plotColData(
    tse_sub, x = group_var, y = index,
    show_boxplot = TRUE, show_violin = FALSE) +
    theme(text = element_text(size = 10)) +
    stat_pvalue_manual(pvals)
p
```

## Further reading 
Article on
[`ggpubr` package](http://www.sthda.com/english/articles/24-ggpubr-publication-ready-plots/76-add-p-values-and-significance-levels-to-ggplots/)
provides further examples for estimating and highlighting significances.
